{"version":3,"sources":["utils/setAuthToken.js","redux/actions/authActions.js","redux/actions/types.js","validation/is-empty.js","redux/reducers/authReducer.js","redux/reducers/errorReducer.js","redux/reducers/chartReducer.js","utils/getTodaysDate.js","redux/reducers/timerReducer.js","redux/reducers/index.js","redux/store.js","common/Spinner.jsx","layout/Header.jsx","buttons/StartButton.jsx","buttons/StopButton.jsx","buttons/ResetButton.jsx","buttons/LogButton.jsx","layout/Navbar.jsx","charts/YContent.jsx","utils/convertHoursToTime.js","charts/Bar.jsx","charts/XContent.jsx","charts/Graph.jsx","redux/actions/chartActions.js","layout/NavHistory.jsx","layout/MainPage.jsx","redux/actions/timerActions.js","layout/Landing.jsx","common/TextFieldGroup.jsx","auth/Login.jsx","auth/Register.jsx","common/PrivateRoute.jsx","layout/Footer.jsx","App.js","serviceWorker.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","logoutUser","dispatch","localStorage","removeItem","setCurrentUser","decoded","type","payload","isEmpty","value","undefined","Object","keys","length","trim","initialState","isAuthenticated","user","chartType","data","loading","getTodaysDate","dateArray","Date","toDateString","split","shift","join","dateToday","hoursToday","startTime","forceLog","dbToday","dbChecked","disabled","start","stop","reset","log","combineReducers","auth","state","arguments","action","objectSpread","errors","chart","timer","forced","today","_action$payload","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","window","__REDUX_DEVTOOLS_EXTENSION__","Spinner","react_default","a","createElement","className","Header","Component","StartButton","_this$props","this","props","startTimer","onClick","StopButton","stopTimer","ResetButton","resetTimer","LogButton","logHours","Navbar","onLogoutClick","authLinks","style","margin","name","YContent","getYlabels","map","increment","i","key","convertHoursToTime","hours","hoursNum","Math","floor","minutes","concat","String","padStart","Bar","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleMouseHover","console","setState","isHovering","height","scale","color","onMouseEnter","onMouseLeave","background","XContent","getLabels","datum","getLabel","period","getDayName","getWeekName","getMonthName","date","getUTCDay","startDate","endDate","setDate","getDate","monthStart","getMonth","dayStart","monthEnd","dayEnd","getUTCMonth","title","Graph","renderBars","size","self","charts_Bar","bottom","getScale","charts_YContent","borderTopLeftRadius","borderTopRightRadius","charts_XContent","getDailyChart","setChartLoading","get","then","res","toConsumableArray","catch","err","NavHistory","handleSelect","e","target","getWeeklyChart","getMonthlyChart","header","onChange","connect","MainPage","preventDefault","forEach","handleStartClick","getItem","getTime","setItem","handleStopClick","end","Number","toFixed","handleResetClick","handleLogClick","_this$props$timer","abs","getDataFromLocal","_localStorage","readOnlyError","updateTimer","prevProps","_this$props$timer$dis","_this$props$chart","layout_Navbar","layout_Header","buttons_StartButton","buttons_StopButton","buttons_ResetButton","buttons_LogButton","layout_NavHistory","common_Spinner","charts_Graph","post","_ref","Landing","history","push","Link","to","TextFieldGroup","placeholder","error","label","info","classnames","is-invalid","Login","email","password","defineProperty","onSubmit","userData","loginUser","common_TextFieldGroup","login","nextProps","errros","jwt_decode","response","Register","password_digest","password2","newUser","registerUser","prevState","component","rest","objectWithoutProperties","Route","assign","render","Redirect","Footer","jwtTokenHoursTracker","currentTime","now","exp","location","href","App","es","exact","path","Switch","common_PrivateRoute","layout_Footer","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","BrowserRouter","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b10ee140.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst setAuthToken = token => {\n  if (token) {\n    axios.defaults.headers.common['Authorization'] = token\n  } else {\n    delete axios.defaults.headers.common['Authorization'];\n  }\n}\n\nexport default setAuthToken;\n","import axios from 'axios';\nimport { GET_ERRORS, SET_CURRENT_USER } from './types';\nimport setAuthToken from '../../utils/setAuthToken';\nimport jwt_decode from 'jwt-decode'\n\nexport const registerUser = (userData, history) => dispatch => {\n  axios\n    .post('/api/users/register', userData)\n    .then(res => history.push('/login'))\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    )\n  return {\n    type: GET_ERRORS,\n    payload: userData\n  }\n\n}\n\n// login - get user token\nexport const loginUser = userData => dispatch => {\n  axios\n    .post('/api/users/login', userData)\n    .then(res => {\n      // save token in local storage\n      const { token } = res.data\n      localStorage.setItem('jwtTokenHoursTracker', token)\n      // set token to auth header\n      setAuthToken(token);\n      // decode token to get user data\n      const decoded = jwt_decode(token)\n      dispatch(setCurrentUser(decoded))\n    })\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    )\n}\n\n//log user out\nexport const logoutUser = () => dispatch => {\n  //Remove token from localStorage\n  localStorage.removeItem('jwtTokenHoursTracker')\n  setAuthToken(false)\n  dispatch(setCurrentUser({}))\n}\n\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  }\n}\n","export const GET_ERRORS = 'GET_ERRORS';\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\n\nexport const CHART_LOADING = 'CHART_LOADING';\nexport const GET_DAILY = 'GET_DAILY'\nexport const GET_WEEKLY = 'GET_WEEKLY'\nexport const GET_MONTHLY = 'GET_MONTHLY'\n\nexport const START_TIMER = 'START_TIMER';\nexport const STOP_TIMER = 'STOP_TIMER';\nexport const RESET_TIMER = 'RESET_TIMER';\nexport const LOG_HOURS = 'LOG_HOURS';\nexport const UPDATE_TIMER = 'UPDATE_TIMER';\n","const isEmpty = value => (\n  value === undefined ||\n  value === null ||\n  (typeof value === 'object' && Object.keys(value).length === 0) ||\n  (typeof value === 'string' && value.trim().length === 0)\n)\n\nexport default isEmpty\n","import { SET_CURRENT_USER } from '../actions/types';\nimport isEmpty from '../../validation/is-empty'\n\nconst initialState = {\n  isAuthenticated: false,\n  user: {}\n}\n\nexport default (state = initialState, action) => {\n  switch(action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        isAuthenticated: !isEmpty(action.payload),\n        user: action.payload\n      }\n    default:\n      return state;\n  }\n}\n","import { GET_ERRORS } from '../actions/types'\n\nconst initialState = {}\n\nexport default function(state = initialState, action) {\n  switch(action.type) {\n    case GET_ERRORS:\n      return action.payload\n    default:\n      return state;\n  }\n}\n","import { GET_DAILY, GET_WEEKLY, GET_MONTHLY, CHART_LOADING } from '../actions/types'\n\nconst initialState = {\n  chartType: '',\n  data: [],\n  loading: false\n}\n\nexport default (state = initialState, action) => {\n  switch(action.type) {\n    case CHART_LOADING:\n      return {\n        ...state,\n        loading: true\n      }\n    case GET_DAILY:\n      return {\n        ...state,\n        chartType: 'daily',\n        data: action.payload,\n        loading: false\n      }\n    case GET_WEEKLY:\n      return {\n        ...state,\n        chartType: 'weekly',\n        data: action.payload,\n        loading: false\n      }\n    case GET_MONTHLY:\n      return {\n        ...state,\n        chartType: 'monthly',\n        data: action.payload,\n        loading: false\n      }\n    default:\n      return state\n  }\n}\n","const getTodaysDate = () => {\n  let dateArray = new Date().toDateString().split(\" \")\n  dateArray.shift();\n  return dateArray.join(' ');\n}\n\nexport default getTodaysDate;\n","import { START_TIMER, STOP_TIMER, RESET_TIMER, LOG_HOURS, UPDATE_TIMER } from '../actions/types'\nimport getTodaysDate from '../../utils/getTodaysDate';\n\nconst initialState = {\n  dateToday: '',\n  hoursToday: 0,//Number(localStorage.getItem('hoursToday')) || 0,\n  startTime: 0,\n  forceLog: false,\n  dbToday: 0,\n  dbChecked: false,\n  disabled: {\n    start: false,\n    stop: true,\n    reset: true,\n    log: true\n  },\n}\n\nexport default (state = initialState, action) => {\n  switch(action.type) {\n    case START_TIMER:\n      return {\n        ...state,\n        dateToday: getTodaysDate(),\n        startTime: action.payload,\n        disabled: {\n          start: true,\n          stop: false,\n          reset: true,\n          log: true\n        }\n      }\n    case STOP_TIMER:\n      return {\n        ...state,\n        hoursToday: action.payload,\n        startTime: 0,\n        disabled: {\n          start: false,\n          stop: true,\n          reset: false,\n          log: false\n        },\n      }\n    case UPDATE_TIMER:\n      const today = new Date();\n      const { hoursToday, dateToday, startTime} = action.payload\n      let disabled;\n      let forced;\n      if (today.toDateString() !== new Date(dateToday).toDateString()) {\n        disabled = {\n          start: true,\n          stop: true,\n          reset: false,\n          log: false\n        }\n        forced = true\n      } else {\n        disabled = {\n          start: startTime > 0,\n          stop: startTime === 0,\n          reset: startTime === 0 && hoursToday === 0,\n          log: startTime === 0 && hoursToday === 0\n        }\n        forced = false\n      }\n      return {\n        ...state,\n        ...action.payload,\n        forceLog: forced,\n        disabled: disabled\n      }\n    case RESET_TIMER:\n      return {\n        ...state,\n        hoursToday: 0,\n        startTime: 0,\n        dbChecked: false,\n        dbToday: 0,\n        disabled: {\n          start: false,\n          stop: true,\n          reset: true,\n          log: true\n        }\n      }\n\n    case LOG_HOURS:\n      return {\n        ...state,\n        hoursToday: 0,\n        startTime: 0,\n        dbChecked: false,\n        dbToday: 0,\n        disabled: {\n          start: false,\n          stop: true,\n          reset: true,\n          log: true\n        }\n      }\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux';\nimport authReducer from './authReducer';\nimport errorReducer from './errorReducer';\nimport chartReducer from './chartReducer';\nimport timerReducer from './timerReducer';\n\nexport default combineReducers({\n  auth: authReducer,\n  errors: errorReducer,\n  chart: chartReducer,\n  timer: timerReducer\n})\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/index.js'\n\nconst initialState = {}\nconst middleware = [thunk]\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nexport default store;\n","import React from 'react'\nimport '../css/Spinner.css';\n\nconst Spinner = () => {\n  return (\n    <div className=\"spinner\">\n      <div className=\"lds-roller\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\n    </div>\n  )\n}\n\nexport default Spinner\n","import React, { Component } from 'react'\nimport getTodaysDate from '../utils/getTodaysDate';\n\nclass Header extends Component {\n  render () {\n    return (\n      <div className=\"header\">\n        <h1 className='f1 tc heading mt3 mb2'>Hours Worked Tracker</h1>\n        <h3 className='f3 tc heading mt0 mb3'>{getTodaysDate()}</h3>\n      </div>\n\n    )\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\n\nclass StartButton extends Component {\n  render() {\n    const { disabled, startTimer } = this.props\n    return (\n      <button\n        className='start button'\n        onClick={startTimer}\n        disabled={disabled}\n        >\n        Start\n      </button>\n    )\n  }\n}\n\nexport default StartButton;\n","import React, { Component } from 'react';\n\nclass StopButton extends Component {\n  render() {\n    const { disabled, stopTimer} = this.props\n    return (\n      <button\n        className='stop button'\n        onClick={stopTimer}\n        disabled={disabled}\n        >\n        Stop\n      </button>\n    )\n  }\n}\n\n\nexport default StopButton;\n","import React, { Component } from 'react';\n\nclass ResetButton extends Component {\n  render() {\n    const {disabled, resetTimer} = this.props\n    return (\n      <button\n        className='reset button'\n        onClick={resetTimer}\n        disabled={disabled}\n      >\n        Reset\n      </button>\n    )\n  }\n}\n\nexport default ResetButton;\n","import React, { Component } from 'react';\n\nclass LogButton extends Component {\n  render() {\n    const { disabled, logHours } = this.props\n    return (\n      <button\n        className='log button'\n        onClick={logHours}\n        disabled={disabled}\n      >\n        Log Hours\n      </button>\n    )\n  }\n\n}\n\nexport default LogButton\n","import React, { Component } from 'react'\nimport { logoutUser } from '../redux/actions/authActions';\n// import getTodaysDate from '../common/getTodaysDate';\n\nclass Navbar extends Component {\n  render () {\n    const { onLogoutClick, auth } = this.props\n    const authLinks = auth.isAuthenticated ? (\n      <div className=\"nav-item auth\">\n        <ul>\n          <li>\n            <button\n              className=\"auth-button\"\n              onClick={onLogoutClick}>\n              Log Out\n            </button>\n          </li>\n        </ul>\n      </div>\n    ) : (\n      <div className=\"nav-item auth\">\n        <ul>\n          <li>Log In</li>\n          <li>Register</li>\n        </ul>\n      </div>\n    )\n    return (\n      <div className=\"navbar\">\n        <div className=\"nav-item\">\n          <h5 style={{margin: 0}}>{auth.user.name}</h5>\n        </div>\n        {authLinks}\n      </div>\n\n    )\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from 'react'\n\nclass YContent extends Component {\n  getYlabels = (chartType) => {\n    let nums;\n    if (chartType === 'daily') {\n      nums = [12, 9, 6, 3]\n    } else if (chartType === 'weekly') {\n      nums = [60, 45, 30, 15]\n    } else {\n      nums = [200, 150, 100, 50]\n    }\n\n    return nums.map((increment, i) => (\n      <span key={i} className=\"increment\">{increment}</span>\n    ))\n  }\n  render () {\n    const { chartType } = this.props\n    return (\n      <div className=\"y-content\">\n        {this.getYlabels(chartType)}\n      </div>\n    )\n  }\n\n}\n\nexport default YContent\n","const MINUTES_DIVIDER = 60\n// const SECONDS_DIVIDER = 60\n\nconst convertHoursToTime = (hours) => {\n  let hoursNum = Math.floor(hours) || 0\n  let minutes = Math.floor(MINUTES_DIVIDER * (hours - hoursNum)) || 0\n  // let seconds = Math.floor(SECONDS_DIVIDER * ((MINUTES_DIVIDER * (hours - hoursNum)) - (minutes))) || 0\n\n  return `${String(hoursNum).padStart(2, '0')}:${String(minutes).padStart(2, '0')}`\n}\n\nexport default convertHoursToTime;\n","import React, { Component } from 'react'\nimport convertHoursToTime from '../utils/convertHoursToTime'\n\nclass Bar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isHovering: false\n    }\n  }\n\n  handleMouseHover = () => {\n    console.log('hovering')\n    this.setState({ isHovering: !this.state.isHovering})\n  }\n\n  render () {\n    const { height, scale, color } = this.props\n    return (\n      <div className=\"bar\">\n        { this.state.isHovering && (\n          <div className=\"hover-hours\">\n            {convertHoursToTime(height)}\n          </div>\n        )}\n        <div className=\"bar-content\">\n          {convertHoursToTime(height)}\n        </div>\n        <div\n          className=\"hours\"\n          onMouseEnter={this.handleMouseHover}\n          onMouseLeave={this.handleMouseHover}\n          style={{height: `${height * scale}px`, background: `${color}`}}\n        >\n        </div>\n      </div>\n    )\n  }\n\n}\n\nexport default Bar;\n","import React, { Component } from 'react'\nimport '../css/XContent.css';\n\nclass XContent extends Component {\n  getLabels = (data, chartType) => {\n    return data.map((datum, i) => {\n      return <div key={i} className=\"period\">{this.getLabel(datum.period, chartType)}</div>\n    })\n  }\n\n  getLabel = (period, chartType) => {\n    let label;\n    if (chartType === 'daily') {\n      label = this.getDayName(period)\n    } else if (chartType === 'weekly') {\n      label = this.getWeekName(period)\n    } else {\n      label = this.getMonthName(period)\n    }\n    return label\n  }\n\n  getDayName = (date) => {\n    const DAILY = ['Sun', 'Mon', 'Tues', 'Wed', 'Thr', 'Fri', 'Sat']\n    let day;\n    if (date === 'Today') {\n      day = date\n    } else {\n      day = DAILY[new Date(date).getUTCDay()]\n    }\n    return day;\n  }\n\n  getWeekName = (date) => {\n    let startDate = new Date(date)\n    let endDate = new Date(date)\n    endDate.setDate(endDate.getDate() + 6)\n    let monthStart = startDate.getMonth() + 1\n    let dayStart = startDate.getDate()\n    let monthEnd = endDate.getMonth() + 1\n    let dayEnd = endDate.getDate()\n    return `${monthStart}/${dayStart} ${monthEnd}/${dayEnd}`\n  }\n\n  getMonthName = (date) => {\n    const MONTHLY = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n    return MONTHLY[new Date(date).getUTCMonth()]\n  }\n\n  render() {\n    const { data, chartType } = this.props\n    let title;\n    if (chartType === 'daily') {\n      title = 'Hours this week'\n    } else if (chartType === 'weekly') {\n      title = 'Last 4 weeks'\n    } else {\n      title = \"Last 6 months\"\n    }\n    return (\n      <div className=\"x-wrapper\">\n        <div className=\"x-content\" >\n          <span className=\"origin\"></span>\n          <div className=\"label-content\">\n            <div className=\"periods\">\n              {this.getLabels(data, chartType)}\n            </div>\n            <div className=\"x-title\">\n              <h4>{title}</h4>\n            </div>\n          </div>\n        </div>\n      </div>\n\n    )\n  }\n\n}\n\nexport default XContent\n","import React, { Component } from 'react'\nimport '../css/Graph.css';\nimport YContent from './YContent'\nimport Bar from './Bar';\nimport XContent from './XContent';\n\nclass Graph extends Component {\n  renderBars = (data, chartType) => {\n    let size = data.length - 1\n    return data.map((datum, i, self) => {\n      let color;\n      if (i === size ) {\n        color = '#06db6d'\n      } else {\n        color = '#582a75'\n      }\n      return (\n        <Bar\n          bottom={i * 10}\n          height={datum.hours}\n          scale={this.getScale(chartType)}\n          key={i}\n          color={color}\n        />\n      )\n    })\n  }\n\n  getScale = (chartType) => {\n    let scale;\n    if (chartType === 'daily') {\n      scale = 16.66666667\n    } else if (chartType === 'weekly') {\n      scale = 3.33333333\n    } else {\n      scale = 1\n    }\n    return scale\n  }\n\n  render () {\n    const { data, chartType } = this.props\n\n    return (\n      <div className=\"graph-wrapper\">\n        <div className=\"graph\">\n          <YContent chartType={chartType} />\n          <div className=\"bar-container\">\n            <div className=\"horizontal-lines\">\n              <div className=\"line\" style={{borderTopLeftRadius: '5px', borderTopRightRadius: '5px'}}></div>\n              <div className=\"line\"></div>\n              <div className=\"line\"></div>\n              <div className=\"line\"></div>\n            </div>\n            {this.renderBars(data, chartType)}\n\n          </div>\n        </div>\n        <XContent data={data} chartType={chartType} />\n      </div>\n    )\n  }\n}\n\nexport default Graph;\n","import axios from 'axios';\nimport { GET_DAILY, GET_WEEKLY, GET_MONTHLY, CHART_LOADING } from './types'\n\nexport const getDailyChart = (hoursToday) => dispatch => {\n  dispatch(setChartLoading())\n  axios\n    .get('/api/hours/daily')\n    .then(res => {\n      let data = [...res.data]\n      data[data.length - 1] = {period: 'Today', hours: hoursToday}\n      return dispatch({\n        type: GET_DAILY,\n        payload: data\n      })\n    }\n\n    )\n    .catch(err =>\n      dispatch({\n        type: GET_DAILY,\n        payload: null\n      })\n    )\n}\n\n// export const addToday = (hours) => dispatch => {\n//   return {\n//     type: ADD_TODAY,\n//     payload: hours\n//   }\n// }\n\nexport const getWeeklyChart = () => dispatch => {\n  dispatch(setChartLoading())\n  axios\n    .get('/api/hours/weekly')\n    .then(res =>\n      dispatch({\n        type: GET_WEEKLY,\n        payload: res.data\n      })\n    )\n    .catch(err =>\n      dispatch({\n        type: GET_WEEKLY,\n        payload: null\n      })\n    )\n}\n\nexport const getMonthlyChart = () => dispatch => {\n  dispatch(setChartLoading())\n  axios\n    .get('/api/hours/monthly')\n    .then(res =>\n      dispatch({\n        type: GET_MONTHLY,\n        payload: res.data\n      })\n    )\n    .catch(err =>\n      dispatch({\n        type: GET_MONTHLY,\n        payload: null\n      })\n    )\n}\n\nconst setChartLoading = () => {\n  return {\n    type: CHART_LOADING\n  }\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux';\nimport { getDailyChart, getWeeklyChart, getMonthlyChart } from '../redux/actions/chartActions'\nimport '../css/NavHistory.css';\n\nclass NavHistory extends Component {\n  handleSelect = (e) => {\n    console.log( e.target.value)\n    if (e.target.value === 'weekly') {\n      this.props.getWeeklyChart()\n    } else if (e.target.value === 'monthly') {\n      this.props.getMonthlyChart()\n    } else {\n      this.props.getDailyChart(this.props.timer.hoursToday)\n    }\n  }\n\n  render () {\n    const { chartType } = this.props\n    let header;\n    if (chartType === 'daily') {\n      header = 'Hours/day'\n    } else if (chartType === 'weekly') {\n      header = 'Hours/week'\n    } else {\n      header = \"Hours/month\"\n    }\n    return (\n      <div className=\"nav-history-wrapper\">\n        <div className=\"nav-history\">\n          <h4>{header}</h4>\n          <select  className=\"chart-dropdown\" onChange={this.handleSelect}>\n            <option value=\"daily\">Daily</option>\n            <option value=\"weekly\">Weekly</option>\n            <option value=\"monthly\">Monthly</option>\n          </select>\n        </div>\n      </div>\n    )\n  }\n}\n\nNavHistory.propTypes = {\n  chart: PropTypes.object.isRequired,\n  getDailyChart: PropTypes.func.isRequired,\n  getMonthlyChart: PropTypes.func.isRequired,\n  getWeeklyChart: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => {\n  return {\n    chart: state.chart,\n    timer: state.timer\n  }\n}\n\nexport default connect(mapStateToProps, {getDailyChart, getWeeklyChart, getMonthlyChart})(NavHistory);\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport Spinner from '../common/Spinner'\nimport { connect } from 'react-redux';\nimport Header from './Header'\nimport getTodaysDate from '../utils/getTodaysDate';\nimport StartButton from '../buttons/StartButton';\nimport StopButton from '../buttons/StopButton';\nimport ResetButton from '../buttons/ResetButton';\nimport LogButton from '../buttons/LogButton';\nimport Navbar from './Navbar'\nimport Graph from '../charts/Graph';\nimport NavHistory from './NavHistory';\nimport { getDailyChart } from '../redux/actions/chartActions'\nimport { startTimer, stopTimer, resetTimer, logHours, updateTimer } from '../redux/actions/timerActions';\nimport { logoutUser } from '../redux/actions/authActions'\n\nclass MainPage extends Component {\n  onLogoutClick = e => {\n    e.preventDefault();\n    ['hoursToday', 'startTime', 'dateToday'].forEach(i => localStorage.removeItem(i))\n    console.log(\"should be logging out\")\n    this.props.logoutUser()\n  }\n\n  handleStartClick = (e) => {\n    let dateToday = localStorage.getItem('dateToday') ||\n      this.props.timer.dateToday ||\n      getTodaysDate()\n    let startTime = new Date().getTime();\n    localStorage.setItem('startTime', startTime)\n    localStorage.setItem('dateToday', dateToday)\n    this.props.startTimer(startTime)\n  }\n\n  handleStopClick = (e) => {\n    if (this.props.timer.startTime === 0) {\n      return\n    }\n    let end = new Date().getTime()\n    // adding seconds to hoursToday\n    let hoursToday = Number(this.props.timer.hoursToday) || 0\n    hoursToday += (end - this.props.timer.startTime) / 3600000\n    localStorage.setItem('startTime', 0)\n    localStorage.setItem('hoursToday', hoursToday.toFixed(3))\n    this.props.stopTimer(hoursToday)\n  }\n\n  handleResetClick = (e) => {\n    localStorage.setItem('hoursToday', 0)\n    localStorage.setItem('dateToday', '')\n    this.props.resetTimer()\n  }\n\n  handleLogClick = () => {\n    // hook up to data base\n    const { hoursToday, dbToday, dateToday } = this.props.timer\n    let hours = Math.abs(hoursToday - dbToday)\n    localStorage.setItem('hoursToday', 0)\n    this.props.logHours(hours, dateToday)\n  }\n\n  getDataFromLocal = () => {\n    if (!localStorage.getItem('dateToday') || localStorage.getItem('dateToday') === '') {\n      localStorage.setItem('dateToday', getTodaysDate())\n    }\n\n    if (!localStorage.getItem('hoursToday')) {\n      localStorage.setItem('hoursToday', '0')\n    }\n\n    if (!localStorage.getItem('startTime')) {\n      localStorage.setItem('startTime', '0')\n    }\n    const { dateToday, hoursToday, startTime } = localStorage\n    if (!hoursToday) {\n      hoursToday = 0\n    }\n\n    return { dateToday, hoursToday, startTime }\n  }\n\n  componentDidMount() {\n    const { dbChecked } = this.props.timer\n    this.props.updateTimer(this.getDataFromLocal(), dbChecked)\n    this.props.getDailyChart(this.props.timer.hoursToday)\n  }\n\n  // Check is hoursToday in timer object changed, if so then update daily chart\n  // After reset and log hours dbCheck is set to false, returns updated chart with logged hours\n  componentDidUpdate(prevProps) {\n    if (prevProps.timer.hoursToday !== this.props.timer.hoursToday) {\n      this.props.getDailyChart(this.props.timer.hoursToday)\n    }\n    const { dbChecked } = this.props.timer\n    if (!dbChecked) {\n      this.props.updateTimer(this.getDataFromLocal(), dbChecked)\n    }\n  }\n\n  render () {\n    const { start, stop, reset, log } = this.props.timer.disabled\n    const { chartType, data, loading } = this.props.chart\n    return (\n      <div>\n        <div className='main'>\n          <Navbar onLogoutClick={this.onLogoutClick} auth={this.props.auth}/>\n          <Header />\n          <div className='actions d-flex justify-content-center'>\n            <StartButton disabled={start} startTimer={this.handleStartClick}/>\n            <StopButton  disabled={stop} stopTimer={this.handleStopClick}/>\n            <ResetButton disabled={reset} resetTimer={this.handleResetClick}/>\n            <LogButton disabled={log} logHours={this.handleLogClick}/>\n          </div>\n          <NavHistory chartType={chartType}/>\n          { loading ?  <Spinner /> : (\n            <div className=\"chart\">\n              <Graph chartType={chartType} data={data} />\n            </div>\n          )}\n        </div>\n      </div>\n\n    )\n  }\n}\n\nMainPage.propTypes = {\n  getDailyChart: PropTypes.func.isRequired,\n  updateTimer: PropTypes.func.isRequired,\n  startTimer: PropTypes.func.isRequired,\n  stopTimer: PropTypes.func.isRequired,\n  resetTimer: PropTypes.func.isRequired,\n  logHours: PropTypes.func.isRequired,\n  logoutUser: PropTypes.func.isRequired,\n  chart: PropTypes.object.isRequired,\n  timer: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth,\n    chart: state.chart,\n    timer: state.timer,\n    errors: state.errors\n  }\n}\n\nexport default connect(mapStateToProps, { getDailyChart, startTimer, stopTimer, resetTimer, logHours, updateTimer, logoutUser })(MainPage);\n","import axios from 'axios';\nimport { START_TIMER, STOP_TIMER, RESET_TIMER, LOG_HOURS, UPDATE_TIMER } from './types'\n\nexport const startTimer = () => dispatch => {\n  dispatch({\n    type: START_TIMER,\n    payload: new Date().getTime()\n  })\n}\n\nexport const stopTimer = (hoursToday) => dispatch => {\n  dispatch({\n    type: STOP_TIMER,\n    payload: Number(hoursToday.toFixed(3))\n  })\n}\n\nexport const updateTimer = ({hoursToday, dateToday, startTime}, dbChecked ) => dispatch => {\n  hoursToday = Number(hoursToday)\n  startTime = Number(startTime)\n  console.log(dateToday)\n  let dbToday;\n  if (dbChecked) {\n    return dispatch({\n      type: UPDATE_TIMER,\n      payload: { dateToday, hoursToday: hoursToday, startTime: Number(startTime), dbChecked}\n    })\n  } else {\n    axios.get('api/hours/today')\n      .then(res => {\n        if (res.data.hours) {\n          dbToday = res.data.hours\n          hoursToday += res.data.hours\n        } else {\n          dbToday = 0\n        }\n        dbChecked = true\n\n        return dispatch({\n          type: UPDATE_TIMER,\n          payload: { dateToday, hoursToday: hoursToday, startTime: Number(startTime), dbChecked, dbToday}\n        })\n      })\n      .catch(err => console.log(err))\n  }\n\n}\n\nexport const resetTimer = () => dispatch => {\n  dispatch({\n    type: RESET_TIMER\n  })\n}\n\nexport const logHours = (hours, date) => dispatch => {\n  axios\n    .post('/api/hours/log-hours', {hours, date})\n    .then(res =>\n      dispatch({\n        type: RESET_TIMER,\n      })\n    )\n    .catch(err => console.log(err))\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { PropTypes } from 'prop-types';\nimport { connect } from 'react-redux';\n\nclass Landing extends Component {\n  componentDidMount() {\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push('/dashboard');\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"landing\">\n        <div className=\"dark-overlay landing-inner text-light\">\n          <div className=\"container\">\n            <div className=\"row main-title\">\n              <h1 className=\"row-item\">Welcome to</h1>\n              <h1 className=\"row-item\">Hours Tracker</h1>\n            </div>\n            <div className=\"row\">\n              <hr />\n            </div>\n            <div className=\"row landing-links row-item\">\n              <Link to=\"/register\" className=\"button mr-2\">Sign Up</Link>\n              <Link to=\"/login\" className=\"button\">Login</Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nLanding.propTypes = {\n  auth: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth,\n  }\n}\n\nexport default connect(mapStateToProps)(Landing);\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\n\nclass TextFieldGroup extends Component {\n  render () {\n    const { name, placeholder, value, label, error, info, type, onChange, disabled} = this.props\n    return (\n      <div className=\"form-group\">\n        <input\n          type={type}\n          className={classnames(\"form-control\", {\n            'is-invalid': error\n          })}\n          placeholder={placeholder}\n          name={name}\n          value={value}\n          onChange={onChange}\n          disabled={disabled}\n        />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n\n      </div>\n    )\n  }\n}\n\nexport default TextFieldGroup;\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { loginUser } from '../redux/actions/authActions'\nimport TextFieldGroup from '../common/TextFieldGroup'\nimport '../css/formStyle.css'\n\nclass Login extends Component {\n  state = {\n    email: '',\n    password: '',\n    errors: {}\n  }\n\n  onChange = (e) => {\n    this.setState({[e.target.name]: e.target.value})\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n    const userData = {...this.state}\n    this.props.loginUser(userData)\n  }\n\n  componentDidMount() {\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push('/dashboard')\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps) {\n    if (nextProps.errors) {\n      return { errros: nextProps }\n    }\n    return null;\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.errors !== this.props.errors) {\n      this.setState({ errors: this.props.errors })\n    }\n\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push('/dashboard')\n\n    }\n  }\n\n  render () {\n    const { errors } = this.state\n    return (\n      <div className=\"login\">\n        <div className=\"container\">\n          <div className=\"row form-row\">\n            <div className=\"form-display\">\n              <h1>Log in</h1>\n              <form onSubmit={this.onSubmit}>\n                <TextFieldGroup\n                  placeholder=\"Email Address\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={this.state.email}\n                  onChange={this.onChange}\n                  label=\"Email Address\"\n                  error={errors.login}\n                />\n\n                <TextFieldGroup\n                  placeholder=\"Password\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={this.state.password}\n                  onChange={this.onChange}\n                  label=\"Password\"\n                  error={errors.login}\n                />\n              <input type=\"submit\" className=\"form-button\" />\n              <Link to=\"/\" >Cancel</Link> \n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n})\n\nexport default connect(mapStateToProps, { loginUser })(Login);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport { registerUser } from '../redux/actions/authActions';\nimport TextFieldGroup from '../common/TextFieldGroup';\n\nclass Register extends Component {\n  state = {\n    name: '',\n    email: '',\n    password_digest: '',\n    password2: '',\n    errors: {}\n  }\n    // this.onChange = this.onChange.bind(this);\n\n  onChange = e => {\n    return this.setState({[e.target.name]: e.target.value})\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n    const newUser = {...this.state}\n    this.props.registerUser(newUser, this.props.history) // this.props.history may not be need\n  }\n\n  // part 1/2 of replacement for deprecated componentWillReceiveProps\n  // static getDerivedStateFromProps(nextProps, prevState) {\n  //   if (nextProps.errors) {\n  //     return { errors: nextProps.errors };\n  //   }\n  //   return null\n  // }\n\n  componentDidMount() {\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push('/dashboard');\n    }\n  }\n\n  // componentWillUnmount() {\n  //   if (Object.keys(this.props.errors).length > 0) {\n  //     this.props.clearErrors()\n  //   }\n  // }\n\n  // part 2/2 of replacement for deprecated componentWillReceiveProps\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.errors !== this.props.errors) {\n      this.setState({ errors: this.props.errors })\n    }\n\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push('/dashboard')\n    }\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"register\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"form-display\">\n              <h1 className=\"display-4 text-center\">Register</h1>\n              <form onSubmit={this.onSubmit}>\n                <TextFieldGroup\n                  type=\"text\"\n                  placeholder=\"Name\"\n                  name=\"name\"\n                  value={this.state.name}\n                  onChange={this.onChange}\n                  error={errors.name}\n                />\n                <TextFieldGroup\n                  type=\"email\"\n                  placeholder=\"Email Address\"\n                  name=\"email\"\n                  value={this.state.email}\n                  onChange={this.onChange}\n                  error={errors.email}\n                />\n                <TextFieldGroup\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  name=\"password_digest\"\n                  value={this.state.password_digest}\n                  onChange={this.onChange}\n                  error={errors.password_digest}\n                />\n\n                <TextFieldGroup\n                  type=\"password\"\n                  placeholder=\"Confirm Password\"\n                  name=\"password2\"\n                  value={this.state.password2}\n                  onChange={this.onChange}\n                  error={errors.password2}\n                />\n                <input\n                  type=\"submit\"\n                  className=\"form-button\"\n                />\n                <Link to=\"/\" >Cancel</Link>\n\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth,\n    errors: state.errors\n  }\n}\nexport default connect(mapStateToProps, { registerUser })(Register);\n","import React  from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst PrivateRoute = ({component: Component, auth, ...rest}) => (\n  <Route\n    {...rest}\n    render = {props =>\n      auth.isAuthenticated === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n    ></Route>\n)\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n})\n\nexport default connect(mapStateToProps, {})(PrivateRoute);\n","import React from 'react'\n\nconst Footer = () => {\n  return (\n    <div className=\"footer\">\n    </div>\n  )\n}\n\nexport default Footer\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport jwt_decode from 'jwt-decode';\nimport setAuthToken from './utils/setAuthToken'\nimport { setCurrentUser, logoutUser } from './redux/actions/authActions'\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\n\nimport './css/App.css';\nimport MainPage from './layout/MainPage'\nimport Landing from './layout/Landing'\nimport Login from './auth/Login'\nimport Register from './auth/Register'\nimport PrivateRoute from './common/PrivateRoute'\nimport Navbar from './layout/Navbar'\nimport Footer from './layout/Footer'\n\n// Check for token\nif (localStorage.jwtTokenHoursTracker) {\n  setAuthToken(localStorage.jwtTokenHoursTracker);\n  const decoded = jwt_decode(localStorage.jwtTokenHoursTracker);\n  store.dispatch(setCurrentUser(decoded))\n\n  // Check for expired token\n  const currentTime = Date.now() / 1000;\n  if (decoded.exp < currentTime) {\n    store.dispatch(logoutUser());\n    window.location.href = '/login'\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={ store }>\n        <div className=\"App\">\n          <div className=\"app-content\">\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/register\" component={Register} />\n            <Switch>\n              <PrivateRoute exact path=\"/dashboard\" component={MainPage} />\n            </Switch>\n          </div>\n          <Footer />\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport './css/index.css';\nimport App from './App';\nimport 'tachyons';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}